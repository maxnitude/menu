{"version":3,"sources":["components/app-header/shopping-cart-solid.svg","components/resto-service-context/resto-service-context.js","components/hoc/with-resto-service.js","actions/index.js","components/spinner/spinner.js","components/added-button/added-button.js","components/menu-list-item/menu-list-item.js","components/menu-list/menu-list.js","components/menu/menu.js","components/pages/main-page.js","components/cart-table/cart-table.js","components/cart-table/index.js","components/pages/cart-page.js","components/app-header/app-header.js","components/app/app.js","components/error/error.js","components/error-boundry/error-boundry.js","services/resto-service.js","reducers/index.js","store.js","index.js"],"names":["module","exports","__webpack_require__","p","RestoServiceContext","React","createContext","WithRestoService","Wrapped","props","react_default","a","createElement","resto_service_context","Consumer","RestoService","Object","assign","addedToCard","id","price","type","payload","deleteProduct","isItemInCart","Spinner","className","mapDispatchToProps","deleteFromCard","changeInput","value","connect","_ref2","itemsInCart","_ref","item","count","_useState","useState","_useState2","slicedToArray","decrButton","setDecrButton","_useState3","_useState4","incrButton","setIncrButton","_useState5","_useState6","alertMessage","setAlertMessage","useEffect","decrButtonClass","incrButtonClass","alertMessageClass","disabled","onClick","onChange","onBlur","e","target","onInput","num","Number","isNaN","match","numFromString","setTimeout","MenuListItem","menuItem","onAddToCard","itemInCart","title","url","src","alt","added_button_added_button","MenuList","_this$props","this","menuItems","map","findItem","find","menu_list_item_menu_list_item","key","Component","Menu","_this","menuRequested","getMenuItems","then","res","menuLoaded","menu","categories","loading","changeTab","activeTab","spinner_spinner","index","menu_list_menu_list","newMenu","tab","state","visibleMenu","MainPage","menu_menu","CartTable","total","Fragment","CartPage","components_cart_table","react_router_dom","to","cartIcon","App","app_header_app_header","react_router","exact","path","component","Error","ErrorBoundry","error","setState","children","_apiBase","fetch","concat","response","ok","json","getResource","initialState","allMenu","reducer","arguments","length","undefined","action","objectSpread","forEach","indexOf","category","push","touch","touchMenu","existingItem","toConsumableArray","newItem","delId","itemIndex","findIndex","delItem","slice","productId","productIndex","delProduct","idy","added","changedId","inputValue","inputPrice","itemInCarts","prevCount","store","createStore","restoService","ReactDOM","render","es","error_boundry_ErrorBoundry","Provider","basename","process","app","document","getElementById"],"mappings":"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","file":"static/js/main.04797571.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shopping-cart-solid.701d6d1d.svg\";","import React from 'react';\r\n\r\nconst RestoServiceContext = React.createContext();\r\n\r\nexport default RestoServiceContext;","import React from 'react';\nimport RestoServiceContext from '../resto-service-context/resto-service-context';\n\nconst WithRestoService = () => (Wrapped) => {\n    return (props) => {\n        return (\n            <RestoServiceContext.Consumer>\n                {\n                    (RestoService) => {\n                        return <Wrapped {...props} RestoService={RestoService}/>\n                    }\n                }\n            </RestoServiceContext.Consumer>\n        )\n    };\n};\n\nexport default WithRestoService;","const menuRequested = () => {\r\n    return {\r\n        type: 'MENU_REQUESTED',\r\n    };\r\n};\r\n\r\nconst menuLoaded = (newMenu, tab) => {\r\n    return {\r\n        type: 'MENU_LOADED',\r\n        payload: newMenu,\r\n        tab: tab,\r\n    };\r\n};\r\n\r\nconst categoriesLoaded = () => {\r\n    return {\r\n        type: 'CATEGORIES_LOADED',\r\n    };\r\n};\r\n\r\nconst changeTab = (tab) => {\r\n    return {\r\n        type: 'CHANGE_TAB',\r\n        tab: tab,\r\n    };\r\n}\r\n\r\nconst addedToCard = (id, price) => {\r\n    return {\r\n        type: 'ITEM_ADD_TO_CARD',\r\n        payload: id,\r\n        price: price\r\n    };\r\n};\r\n\r\nconst deleteFromCard = (id) => {\r\n    return {\r\n        type: 'ITEM_REMOVE_FROM_CARD',\r\n        payload: id\r\n    };\r\n};\r\n\r\nconst deleteProduct = (id) => {\r\n    return {\r\n        type: 'PRODUCT_REMOVE_FROM_CARD',\r\n        payload: id,\r\n    };\r\n}\r\n\r\nconst isItemInCart = (id) => {\r\n    return {\r\n        type: 'CHECK_ITEM_IN_CART',\r\n        payload: id\r\n    };\r\n};\r\n\r\nconst changeInput = (id, price, value) => {\r\n    return {\r\n        type: 'CHANGE_INPUT',\r\n        payload: id,\r\n        value: value,\r\n        price: price,\r\n    };\r\n}\r\n\r\nexport {\r\n    menuLoaded,\r\n    menuRequested,\r\n    addedToCard,\r\n    deleteFromCard,\r\n    isItemInCart,\r\n    categoriesLoaded,\r\n    changeTab,\r\n    changeInput,\r\n    deleteProduct\r\n};","import React from 'react';\nimport './spinner.scss';\n\nconst Spinner = () => {\n\n    return (\n        <section className='spinner'>\n            <div className=\"spinner__eclipse\"> \n                <div className=\"ldio-2pu35wpqvcc\">\n                    <div></div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Spinner;","import React, { useEffect, useState } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {deleteFromCard, addedToCard, isItemInCart, changeInput, deleteProduct} from '../../actions/index';\r\nimport './added-button.scss';\r\n\r\nconst AddedButton = ({isItemInCart, addedToCard, deleteFromCard, item, changeInput, deleteProduct}) => {\r\n \r\n    const {count, price, id} = item;\r\n\r\n    const [decrButton, setDecrButton] = useState(true);\r\n\r\n    const [incrButton, setIncrButton] = useState(true);\r\n\r\n    const [alertMessage, setAlertMessage] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (count === 0) {\r\n            setDecrButton(false);\r\n        } else if (count === 49) {\r\n            setIncrButton(false);\r\n        }  else if (count < 49 && count > 0) {\r\n            setIncrButton(true);\r\n            setDecrButton(true);\r\n        } \r\n    }, [count])\r\n\r\n    let decrButtonClass = decrButton ? \"added-btn__minus\" : \"added-btn__minus added-btn__inactive\";\r\n    let incrButtonClass = incrButton ? \"added-btn__plus\" : \"added-btn__plus added-btn__inactive\";\r\n    let alertMessageClass = alertMessage ? \"added-btn__alert-message\" : \"added-btn__alert-message__inactive\";\r\n\r\n    return (\r\n        <div className=\"added-btn\">\r\n            <button \r\n                className={decrButtonClass}\r\n                disabled = {!decrButton}\r\n                onClick={() => {\r\n                        if (decrButton) {\r\n                            deleteFromCard(id);\r\n                        } \r\n                    }\r\n                } \r\n            >-</button>\r\n            <div className=\"added-btn__title\">\r\n                <input \r\n                    className=\"added-btn__input\" \r\n                    type=\"text\" \r\n                    value={count}\r\n                    onChange={()=>{}}\r\n                    onBlur={(e) => {\r\n                        const value = e.target.value;\r\n                        if ( value === '') {\r\n                            changeInput(id, price, 1);\r\n                            setDecrButton(true);   \r\n                        }\r\n                        setAlertMessage(false)\r\n                        } \r\n                    }\r\n                    onInput={(e) => {\r\n                        const value = e.target.value;\r\n                        const num = Number(e.target.value);\r\n                        if (!isNaN(num) && value !== '') {\r\n                            if (num === 0 ) {\r\n                                changeInput(id, price, 1);\r\n                            } else if (value > 49) {\r\n                                setAlertMessage(true);\r\n                                setTimeout(() => {\r\n                                    setAlertMessage(false);\r\n                                }, 3000);\r\n                                changeInput(id, price, 49);\r\n                            } else {\r\n                                changeInput(id, price, num);\r\n                            }\r\n                        } else if (value === '' ) {\r\n                            setDecrButton(false);\r\n                            changeInput(id, price, value);\r\n                        } else if (isNaN(num)) {\r\n                            if (value.match(/\\d+/) === null) {\r\n                                changeInput(id, price, 1);\r\n                            } else  {\r\n                                const numFromString = Number(value.match(/\\d+/)[0]);\r\n                                changeInput(id, price, numFromString);\r\n                            };\r\n                        }                 \r\n                    }}\r\n                ></input>\r\n            </div> \r\n            <button \r\n                className={incrButtonClass}\r\n                disabled = {!incrButton}\r\n                onClick={() => {\r\n                    isItemInCart(id);\r\n                    addedToCard(id, price)\r\n                    }\r\n                } \r\n            >+</button>\r\n            <span className={alertMessageClass}>No more than 49</span>\r\n        </div>  \r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = ({itemsInCart}) => {\r\n    return {\r\n        itemsInCart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    deleteFromCard,\r\n    addedToCard,\r\n    isItemInCart,\r\n    changeInput,\r\n    deleteProduct\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddedButton);\r\n","import React from 'react';\nimport './menu-list-item.scss';\nimport AddedButton from '../added-button/added-button';\n\nconst MenuListItem = ({isItemInCart, menuItem, onAddToCard, itemInCart}) => {\n    const {title, price, url} = menuItem;\n    \n    return (\n            <li \n                className=\"menu__item\">\n                    <img className=\"menu__img\" src={url} alt={title}></img>\n                    <div className=\"menu__title\">{title}</div>\n                    <div className=\"menu__price-info\">\n                        <div className=\"menu__price\">Price: <span>{price}$</span></div>\n                        { itemInCart ? \n                            <AddedButton item={itemInCart}/> :     \n                            <button \n                                    onClick={() => {\n                                        onAddToCard();\n                                        isItemInCart()\n                                        }\n                                    } \n                                    className=\"menu__btn\"\n                            >Add to cart</button>\n                        }\n                    </div>\n            </li>\n    );\n}\n\nexport default MenuListItem;","import React from 'react';\nimport MenuListItem from '../menu-list-item/menu-list-item';\nimport './menu-list.scss';\n\nclass MenuList extends React.Component {\n    \n    render() {\n        const {menuItems, addedToCard, isItemInCart, itemsInCart} = this.props;\n\n        return (\n            <ul className=\"menu__list\">\n                {\n                    menuItems.map(menuItem => {\n                        const findItem = itemsInCart.find(item => item.id === menuItem.id) || null;\n                        return <MenuListItem \n                            key={menuItem.id} \n                            menuItem={menuItem}\n                            onAddToCard={() => addedToCard(menuItem.id, menuItem.price)}\n                            isItemInCart={() => isItemInCart(menuItem.id)}\n                            itemInCart={findItem}\n                            />\n                    })\n                }\n            </ul>\n        )\n    }\n};\n\nexport default MenuList;","import React from 'react';\r\nimport WithRestoService from '../hoc/with-resto-service';\r\nimport {connect} from 'react-redux';\r\nimport {menuLoaded, menuRequested, addedToCard, isItemInCart, changeTab} from '../../actions/index';\r\nimport Spinner from '../spinner/spinner';\r\nimport MenuList from '../menu-list/menu-list';\r\nimport './menu.scss';\r\n\r\nclass Menu extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.menuRequested();\r\n        const {RestoService} = this.props;\r\n        RestoService.getMenuItems()\r\n         .then(res => this.props.menuLoaded(res.menu, null));\r\n    }\r\n\r\n    render() {\r\n        const {categories, \r\n            menuItems, \r\n            loading, \r\n            addedToCard, \r\n            isItemInCart, \r\n            itemsInCart, \r\n            changeTab, \r\n            activeTab} = this.props;\r\n        \r\n        if (loading) {\r\n            return <Spinner/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"menu\">\r\n                <ul className=\"menu__tabs\">\r\n                    {\r\n                        categories.map((item, index) => {\r\n                            return (\r\n                                <li \r\n                                    className={activeTab === item ? \"menu__tabs-item active\" : \"menu__tabs-item\"}\r\n                                    key={index} //¯\\_(ツ)_/¯\r\n                                    onClick={() => changeTab(item)}\r\n                                    >{item}\r\n                                </li> \r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n                <MenuList \r\n                    menuItems={menuItems}\r\n                    addedToCard={addedToCard} \r\n                    isItemInCart={isItemInCart}\r\n                    itemsInCart={itemsInCart}\r\n                />\r\n            </div>\r\n            \r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        menuItems: state.visibleMenu,\r\n        loading: state.loading,\r\n        itemsInCart: state.itemsInCart,\r\n        categories: state.categories,\r\n        activeTab: state.activeTab\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    menuLoaded,\r\n    menuRequested,\r\n    addedToCard,\r\n    isItemInCart,\r\n    changeTab\r\n}\r\n\r\nexport default  WithRestoService()(connect(mapStateToProps, mapDispatchToProps)(Menu));","import React from 'react';\nimport Menu from '../menu/menu';\n\nconst MainPage = () => {\n    return (\n        <Menu/>\n    )\n}\n\nexport default MainPage;\n","import React from 'react';\nimport './cart-table.scss';\nimport {connect} from 'react-redux';\nimport {deleteProduct} from '../../actions/index';\nimport AddedButton from '../added-button/added-button'\n\nconst CartTable = ({itemsInCart, total, deleteProduct}) => {\n    return (\n        <>\n            <div className=\"cart__title\">{ total > 0 ? 'Your order:' : 'Cart is empty'}</div>\n            <div className=\"cart__list\">\n                {\n                    itemsInCart.map(item => {\n                        const {title, price, url, id, count} = item;\n\n                        return (\n                            <div key={id} className=\"cart__item\">\n                                <div className=\"cart__item-img\">\n                                    <img src={url} className=\"cart__item-img__source\" alt={title}></img>\n                                </div>\n                                <div className=\"cart__item-description\">\n                                    <div className=\"cart__item-title\">{title}</div>\n                                    <div className=\"cart__item-price\">{price}$/count</div>\n                                    <AddedButton item={item}/>\n                                    <div className=\"cart__item-price__total\">{count*price}$</div>\n                                    <div onClick={() => deleteProduct(id)} className=\"cart__item-delete\"></div>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        itemsInCart: state.itemsInCart,\n        total: state.total\n    }\n}\n\nconst mapDispatchToProps = {\n    deleteProduct\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartTable);","import CartTable from './cart-table';\n\nexport default CartTable;","import React from 'react';\nimport CartTable from '../cart-table';\n\nconst CartPage = () => {\n    return (\n        <div className=\"cart\"> \n            <CartTable/>\n        </div>\n    )\n}\n\nexport default CartPage;","import React from 'react';\nimport cartIcon from './shopping-cart-solid.svg';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport './app-header.scss';\n\nconst AppHeader = ({total}) => {\n    return (\n        <header className=\"header\">\n            <Link to='/' className=\"header__link\" >\n                Menu\n            </Link>\n            <Link to='/cart' className=\"header__link\" >\n                <img className=\"header__cart\" src={cartIcon} alt=\"cart\"></img>\n                Total: {total} $\n            </Link>\n        </header>\n    )\n};\n\nconst mapStateToProps = ({total}) => {\n    return {\n        total\n    }\n}\n\nexport default connect(mapStateToProps)(AppHeader);","import React from 'react';\nimport {MainPage, CartPage} from '../pages';\nimport AppHeader from '../app-header/app-header';\nimport {Route} from 'react-router-dom';\n \nclass App extends React.Component  {\n    render () {\n        return (\n                <div className=\"app\">\n                <AppHeader/>\n                <Route exact path='/' component={MainPage}  />\n                <Route path=\"/cart\" component={CartPage} />\n                </div>\n        )\n    }     \n}\n\nexport default App;","import React from 'react';\n\nconst Error = () => {\n    return <div className=\"error\">Error</div>\n}\n\nexport default Error;","import React from 'react';\nimport Error from '../error/error';\n\nexport default class ErrorBoundry extends React.Component {\n\n    state = {\n        error: false\n    }\n    componentDidCatch() {\n        this.setState({error: true})\n    }\n    render() {\n       if (this.state.error) {\n        return <Error/>;\n       }\n       \n       return this.props.children;\n    }\n}\n","export default class RestoService {\r\n    _apiBase = 'https://maxnitude.github.io';\r\n    \r\n    async getResource (url) {\r\n        const response = await fetch(`${this._apiBase}${url}`);\r\n        if (response.ok) {\r\n            return response.json();\r\n        } else {\r\n            throw new Error(`Не удалось получить данные`)\r\n        }\r\n    }\r\n\r\n    async getMenuItems () {\r\n        return await this.getResource(`/menu/db.json`);\r\n    }\r\n}\r\n","const initialState = {\r\n    allMenu: [],\r\n    visibleMenu: [],\r\n    loading: true,\r\n    itemsInCart: [],\r\n    total: 0,\r\n    categories: [],\r\n    activeTab: 'Pizza'\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'MENU_REQUESTED':\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        \r\n        case 'MENU_LOADED':\r\n            const allMenu = action.payload;\r\n            let tab = action.tab;\r\n            if (tab === null) {\r\n                tab = state.activeTab;\r\n            }\r\n            const visibleMenu = [];\r\n            allMenu.forEach(item => {  \r\n                if (state.categories.indexOf(item.category) === -1) {\r\n                    state.categories.push(item.category);\r\n                };\r\n            })\r\n\r\n            allMenu.forEach(item => {\r\n                if (item.category === tab) {\r\n                    visibleMenu.push(item);\r\n                }\r\n            })\r\n\r\n            return {\r\n                ...state,\r\n                allMenu: action.payload,\r\n                visibleMenu: visibleMenu,\r\n                loading: false,\r\n                categories: state.categories,\r\n                activeTab: tab,\r\n            };\r\n\r\n        case 'CHANGE_TAB':\r\n            const touch = action.tab;\r\n            const touchMenu = [];\r\n            state.allMenu.forEach(item => {\r\n                if (item.category === touch) {\r\n                    touchMenu.push(item);\r\n                }\r\n            })\r\n            return {\r\n                ...state,\r\n                visibleMenu: [...touchMenu],\r\n                activeTab: touch,\r\n            };\r\n\r\n        case 'ITEM_ADD_TO_CARD':\r\n            const id = action.payload;\r\n            const price = action.price;\r\n            const item = state.visibleMenu.find(item => item.id === id);\r\n            const existingItem = state.itemsInCart.find(item => item.id === id);\r\n            if (existingItem) {\r\n                existingItem.count++;\r\n                return {\r\n                    ...state,\r\n                    itemsInCart: [\r\n                        ...state.itemsInCart\r\n                    ],\r\n                    total: state.total + price\r\n                };\r\n            }\r\n            const newItem = {\r\n                title: item.title,\r\n                price: item.price,\r\n                url: item.url,\r\n                id: item.id,\r\n                count: 1,\r\n            }   \r\n            return {\r\n                ...state,\r\n                itemsInCart: [\r\n                    ...state.itemsInCart,\r\n                   newItem\r\n                ],\r\n                total: state.total+price\r\n            };\r\n\r\n        case 'ITEM_REMOVE_FROM_CARD':\r\n            const delId = action.payload;\r\n            const itemIndex = state.itemsInCart.findIndex(item => item.id === delId);\r\n            const delItem = state.itemsInCart.find(item => item.id === delId); \r\n            if (delItem.count > 1) {\r\n                delItem.count--;\r\n                return {\r\n                    ...state,\r\n                    itemsInCart: [\r\n                        ...state.itemsInCart\r\n                    ],\r\n                    total: state.total - delItem.price\r\n                };\r\n            } else if (delItem.count === 0) {\r\n                return {\r\n                    ...state,\r\n                    itemsInCart: [\r\n                        ...state.itemsInCart.slice(0, itemIndex),\r\n                        ...state.itemsInCart.slice(itemIndex + 1)\r\n                    ],\r\n                };\r\n            } \r\n            return {\r\n                ...state,\r\n                itemsInCart: [\r\n                    ...state.itemsInCart.slice(0, itemIndex),\r\n                    ...state.itemsInCart.slice(itemIndex + 1)\r\n                ],\r\n                total: state.total - delItem.price\r\n            };\r\n\r\n        case 'PRODUCT_REMOVE_FROM_CARD':    \r\n            const productId = action.payload;\r\n            const productIndex = state.itemsInCart.findIndex(item => item.id === productId);\r\n            const delProduct = state.itemsInCart.find(item => item.id === productId); \r\n            return {\r\n                ...state,\r\n                itemsInCart: [\r\n                    ...state.itemsInCart.slice(0, productIndex),\r\n                    ...state.itemsInCart.slice(productIndex + 1)\r\n                ],\r\n                total: state.total - delProduct.price*delProduct.count\r\n            };\r\n\r\n        case 'CHECK_ITEM_IN_CART':\r\n            const idy = action.payload;\r\n            const itemInCart = state.itemsInCart.find(item => item.id === idy);\r\n            itemInCart.added = true;\r\n            return {\r\n                ...state,\r\n            };\r\n\r\n        case 'CHANGE_INPUT':\r\n            const changedId = action.payload;\r\n            const inputValue = action.value;\r\n            const inputPrice = action.price;\r\n            const itemInCarts = state.itemsInCart.find(item => item.id === changedId);\r\n            const prevCount = itemInCarts.count;\r\n            itemInCarts.count = inputValue;\r\n            return {\r\n                ...state,\r\n                itemsInCart: [\r\n                    ...state.itemsInCart\r\n                ],\r\n                total: state.total + inputPrice*inputValue - inputPrice*prevCount\r\n            };    \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import {createStore} from 'redux';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport ErrorBoundry from './components/error-boundry/error-boundry';\nimport RestoService from './services/resto-service';\nimport RestoServiceContext from './components/resto-service-context/resto-service-context';\nimport store from './store';\n\nimport './index.scss';\n\nconst restoService = new RestoService();\n\nReactDOM.render(\n    <Provider store={store}>\n        <ErrorBoundry>\n            <RestoServiceContext.Provider value={restoService}>\n                <Router basename={process.env.PUBLIC_URL}>\n                    <App/>\n                </Router>\n            </RestoServiceContext.Provider>\n        </ErrorBoundry>\n    </Provider>\n    ,document.getElementById('root')\n);\n\n"],"sourceRoot":""}