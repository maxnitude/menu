{"version":3,"sources":["components/app-header/shopping-cart-solid.svg","components/menu-list-item/menu-list-item.js","components/resto-service-context/resto-service-context.js","components/hoc/with-resto-service.js","components/spinner/spinner.js","components/menu-list/menu-list.js","actions/index.js","components/pages/main-page.js","components/cart-table/cart-table.js","components/cart-table/index.js","components/pages/cart-page.js","components/app-header/app-header.js","components/app/app.js","components/error/error.js","components/error-boundry/error-boundry.js","services/resto-service.js","reducers/index.js","store.js","index.js"],"names":["module","exports","__webpack_require__","p","MenuListItem","_ref","isItemInCart","menuItem","onAddToCard","classes","itemsInCart","title","price","url","buttonTitle","count","added","concat","react_default","a","createElement","className","src","alt","onClick","RestoServiceContext","React","createContext","WithRestoService","Wrapped","props","resto_service_context","Consumer","RestoService","Object","assign","Spinner","MenuList","_this","this","menuRequsted","getMenuItems","then","res","menuLoaded","menu","_this$props","menuItems","loading","addedToCard","spinner_spinner","map","findItem","find","item","id","menu_list_item_menu_list_item","key","Component","mapDispatchToProps","newMenu","type","payload","connect","state","MainPage","menu_list_menu_list","deleteFromCard","CartTable","_ref2","Fragment","CartPage","components_cart_table","total","react_router_dom","to","cartIcon","App","app_header_app_header","react_router","exact","path","component","Error","ErrorBoundry","error","setState","children","_apiBase","fetch","response","ok","json","getResource","initialState","reducer","arguments","length","undefined","action","objectSpread","existingItem","toConsumableArray","newItem","idx","delPrice","delCount","itemIndex","findIndex","slice","idy","itemInCart","console","log","store","createStore","restoService","ReactDOM","render","es","error_boundry_ErrorBoundry","Provider","value","basename","process","app","document","getElementById"],"mappings":"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","file":"static/js/main.130c132d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shopping-cart-solid.701d6d1d.svg\";","import React from 'react';\nimport './menu-list-item.scss';\n\nconst MenuListItem = ({isItemInCart, menuItem, onAddToCard, classes, itemsInCart}) => {\n    const {title, price, url} = menuItem;\n    let buttonTitle = \"Add to cart\";\n    if (itemsInCart) {\n        const {count, added} = itemsInCart;\n        if (added === true) {\n            buttonTitle = `Added: ${count}`;\n        }\n    }\n    \n    return (\n            <li \n                className=\"menu__item\">\n                    <img className=\"menu__img\" src={url} alt={title}></img>\n                    <div className=\"menu__title\">{title}</div>\n                    <div className=\"menu__price-info\">\n                        <div className=\"menu__price\">Price: <span>{price}$</span></div>\n                        <button \n                            onClick={() => {\n                                onAddToCard();\n                                isItemInCart()\n                                }\n                            } \n                            className={classes}\n                        >{buttonTitle}</button>\n                    </div>\n            </li>\n    );\n}\n\nexport default MenuListItem;","import React from 'react';\r\n\r\nconst RestoServiceContext = React.createContext();\r\n\r\nexport default RestoServiceContext;","import React from 'react';\nimport RestoServiceContext from '../resto-service-context/resto-service-context';\n\nconst WithRestoService = () => (Wrapped) => {\n    return (props) => {\n        return (\n            <RestoServiceContext.Consumer>\n                {\n                    (RestoService) => {\n                        return <Wrapped {...props} RestoService={RestoService}/>\n                    }\n                }\n            </RestoServiceContext.Consumer>\n        )\n    };\n};\n\nexport default WithRestoService;","import React from 'react';\nimport './spinner.scss';\n\nconst Spinner = () => {\n\n    return (\n        <section className='spinner'>\n            <div className=\"spinner__eclipse\"> \n                <div className=\"ldio-2pu35wpqvcc\">\n                    <div></div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Spinner;","import React from 'react';\nimport MenuListItem from '../menu-list-item/menu-list-item';\nimport {connect} from 'react-redux';\nimport WithRestoService from '../hoc/with-resto-service';\nimport {menuLoaded, menuRequsted, addedToCard, isItemInCart} from '../../actions/index';\nimport Spinner from '../spinner/spinner';\n\nimport './menu-list.scss';\n\nclass MenuList extends React.Component {\n    componentDidMount() {\n        this.props.menuRequsted();\n        const {RestoService} = this.props;\n        RestoService.getMenuItems()\n         .then(res => this.props.menuLoaded(res.menu));\n    }\n\n    \n    render() {\n        const {menuItems, loading, addedToCard, isItemInCart, itemsInCart} = this.props;\n\n        \n        if (loading) {\n            return <Spinner/>\n        }\n\n        return (\n            <ul className=\"menu__list\">\n                {\n                    menuItems.map(menuItem => {\n                        let classes = \"menu__btn\";\n                        const findItem = itemsInCart.find(item => item.id === menuItem.id) || null;\n                        if (findItem && findItem.added === true) {\n                            classes = \"menu__btn__mod\";\n                        }\n                        return <MenuListItem \n                            key={menuItem.id} \n                            menuItem={menuItem}\n                            onAddToCard={() => addedToCard(menuItem.id, menuItem.price)}\n                            isItemInCart={() => isItemInCart(menuItem.id)}\n                            classes={classes}\n                            itemsInCart={findItem || null}\n                            />\n                    })\n                }\n            </ul>\n        )\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        menuItems: state.menu,\n        loading: state.loading,\n        itemsInCart: state.itemsInCart\n    }\n}\n\nconst mapDispatchToProps = {\n    menuLoaded,\n    menuRequsted,\n    addedToCard,\n    isItemInCart\n}\n\nexport default WithRestoService()(connect(mapStateToProps, mapDispatchToProps)(MenuList));","const menuLoaded = (newMenu) => {\r\n    return {\r\n        type: 'MENU_LOADED',\r\n        payload: newMenu\r\n    };\r\n};\r\n\r\nconst menuRequsted = () => {\r\n    return {\r\n        type: 'MENU_REQUESTED',\r\n    };\r\n};\r\n\r\nconst addedToCard = (id, price) => {\r\n    return {\r\n        type: 'ITEM_ADD_TO_CARD',\r\n        payload: id,\r\n        price: price\r\n    };\r\n};\r\n\r\nconst deleteFromCard = (id, price, count) => {\r\n    return {\r\n        type: 'ITEM_REMOVE_FROM_CARD',\r\n        payload: id,\r\n        price: price,\r\n        count: count\r\n    };\r\n};\r\n\r\nconst isItemInCart = (id) => {\r\n    return {\r\n        type: 'CHECK_ITEM_IN_CART',\r\n        payload: id\r\n    };\r\n};\r\n\r\nexport {\r\n    menuLoaded,\r\n    menuRequsted,\r\n    addedToCard,\r\n    deleteFromCard,\r\n    isItemInCart\r\n};","import React from 'react';\nimport MenuList from '../menu-list/menu-list';\n\nconst MainPage = () => {\n    return (\n        <MenuList/>\n    )\n}\n\nexport default MainPage;\n","import React from 'react';\nimport './cart-table.scss';\nimport {connect} from 'react-redux';\nimport {deleteFromCard} from '../../actions/index'\n\nconst CartTable = ({itemsInCart, deleteFromCard}) => {\n    return (\n        <>\n            <div className=\"cart__title\">Ваш заказ:</div>\n            <div className=\"cart__list\">\n                {\n                    itemsInCart.map(item => {\n                        const {title, price, url, id, count} = item;\n\n                        return (\n                            <div key={id} className=\"cart__item\">\n                            <img src={url} className=\"cart__item-img\" alt={title}></img>\n                            <div className=\"cart__item-title\">{title}</div>\n                            <div className=\"cart__item-title\">{count} x {price}$</div>\n                            <div className=\"cart__item-price\">{count*price}$</div>\n                            <div onClick={() => deleteFromCard(id, price, count)} className=\"cart__close\">&times;</div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = ({itemsInCart}) => {\n    return {\n        itemsInCart\n    }\n}\n\nconst mapDispatchToProps = {\n    deleteFromCard\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartTable);","import CartTable from './cart-table';\n\nexport default CartTable;","import React from 'react';\nimport CartTable from '../cart-table';\n\nconst CartPage = () => {\n    return (\n        <div className=\"cart\"> \n            <CartTable/>\n        </div>\n    )\n}\n\nexport default CartPage;","import React from 'react';\nimport cartIcon from './shopping-cart-solid.svg';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport './app-header.scss';\n\nconst AppHeader = ({total}) => {\n    return (\n        <header className=\"header\">\n            <Link to='/' className=\"header__link\" >\n                Menu\n            </Link>\n            <Link to='/cart' className=\"header__link\" >\n                <img className=\"header__cart\" src={cartIcon} alt=\"cart\"></img>\n                Total: {total} $\n            </Link>\n        </header>\n    )\n};\n\nconst mapStateToProps = ({total}) => {\n    return {\n        total\n    }\n}\n\n\nexport default connect(mapStateToProps)(AppHeader);","import React from 'react';\nimport {MainPage, CartPage} from '../pages';\nimport AppHeader from '../app-header/app-header';\nimport {Route} from 'react-router-dom';\n \nclass App extends React.Component  {\n    render () {\n        return (\n                <div className=\"app\">\n                <AppHeader/>\n                <Route exact path='/' component={MainPage}  />\n                <Route path=\"/cart\" component={CartPage} />\n                </div>\n        )\n    }     \n}\n\nexport default App;","import React from 'react';\n\nconst Error = () => {\n    return <div className=\"error\">Error</div>\n}\n\nexport default Error;","import React from 'react';\nimport Error from '../error/error';\n\nexport default class ErrorBoundry extends React.Component {\n\n    state = {\n        error: false\n    }\n    componentDidCatch() {\n        this.setState({error: true})\n    }\n    render() {\n       if (this.state.error) {\n        return <Error/>;\n       }\n       \n       return this.props.children;\n    }\n}\n","export default class RestoService {\r\n    _apiBase = 'https://maxnitude.github.io';\r\n    \r\n    async getResource (url) {\r\n        const response = await fetch(`${this._apiBase}${url}`);\r\n        if (response.ok) {\r\n            return response.json();\r\n        } else {\r\n            throw new Error(`Не удалось получить данные`)\r\n        }\r\n    }\r\n\r\n    async getMenuItems () {\r\n        return await this.getResource(`/menu/db.json`);\r\n    }\r\n}\r\n","const initialState = {\r\n    menu: [],\r\n    loading: true,\r\n    itemsInCart: [],\r\n    total: 0\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'MENU_LOADED':\r\n            return {\r\n                ...state,\r\n                menu: action.payload,\r\n                loading: false\r\n            };\r\n        case 'MENU_REQUESTED':\r\n            return {\r\n                ...state,\r\n                menu: state.menu,\r\n                loading: true\r\n            };\r\n        case 'ITEM_ADD_TO_CARD':\r\n            const id = action.payload;\r\n            const price = action.price;\r\n            const item = state.menu.find(item => item.id === id);\r\n            const existingItem = state.itemsInCart.find(item => item.id === id);\r\n            if (existingItem) {\r\n                existingItem.count++;\r\n                // console.log(existingItem.count);\r\n                return {\r\n                    ...state,\r\n                    itemsInCart: [\r\n                        ...state.itemsInCart\r\n                    ],\r\n                    total: state.total + price\r\n                };\r\n            }\r\n\r\n            const newItem = {\r\n                title: item.title,\r\n                price: item.price,\r\n                url: item.url,\r\n                id: item.id,\r\n                count: 1,\r\n            }   \r\n            \r\n\r\n \r\n            return {\r\n                ...state,\r\n                itemsInCart: [\r\n                    ...state.itemsInCart,\r\n                   newItem\r\n                ],\r\n                total: state.total+price\r\n            };\r\n\r\n        case 'ITEM_REMOVE_FROM_CARD':\r\n            const idx = action.payload;\r\n            const delPrice = action.price;\r\n            const delCount = action.count;\r\n            const itemIndex = state.itemsInCart.findIndex(item => item.id === idx);    \r\n            return {\r\n                ...state,\r\n                itemsInCart: [\r\n                    ...state.itemsInCart.slice(0, itemIndex),\r\n                    ...state.itemsInCart.slice(itemIndex + 1)\r\n                ],\r\n                total: state.total - delPrice*delCount\r\n            }\r\n\r\n        case 'CHECK_ITEM_IN_CART':\r\n            const idy = action.payload;\r\n            const itemInCart = state.itemsInCart.find(item => item.id === idy);\r\n            itemInCart.added = true;\r\n            console.log(itemInCart);\r\n            console.log(state.itemsInCart);\r\n            return {\r\n                ...state,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import {createStore} from 'redux';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport ErrorBoundry from './components/error-boundry/error-boundry';\nimport RestoService from './services/resto-service';\nimport RestoServiceContext from './components/resto-service-context/resto-service-context';\nimport store from './store';\n\nimport './index.scss';\n\nconst restoService = new RestoService();\n\nReactDOM.render(\n    <Provider store={store}>\n        <ErrorBoundry>\n            <RestoServiceContext.Provider value={restoService}>\n                <Router basename={process.env.PUBLIC_URL}>\n                    <App/>\n                </Router>\n            </RestoServiceContext.Provider>\n        </ErrorBoundry>\n    </Provider>\n    ,document.getElementById('root')\n);\n\n"],"sourceRoot":""}