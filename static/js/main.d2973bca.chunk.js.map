{"version":3,"sources":["components/app-header/shopping-cart-solid.svg","components/resto-service-context/resto-service-context.js","components/hoc/with-resto-service.js","actions/index.js","components/spinner/spinner.js","components/added-button/added-button.js","components/menu-list-item/menu-list-item.js","components/menu-list/menu-list.js","components/menu/menu.js","components/pages/main-page.js","components/cart-table/cart-table.js","components/cart-table/index.js","components/pages/cart-page.js","components/app-header/app-header.js","components/app/app.js","components/error/error.js","components/error-boundry/error-boundry.js","services/resto-service.js","reducers/index.js","store.js","index.js"],"names":["module","exports","__webpack_require__","p","RestoServiceContext","React","createContext","WithRestoService","Wrapped","props","react_default","a","createElement","resto_service_context","Consumer","RestoService","Object","assign","addedToCard","id","price","type","payload","deleteFromCard","isItemInCart","Spinner","className","mapDispatchToProps","connect","_ref2","itemsInCart","_ref","item","count","onClick","MenuListItem","menuItem","onAddToCard","itemInCart","title","url","src","alt","added_button_added_button","MenuList","_this$props","this","menuItems","map","findItem","find","menu_list_item_menu_list_item","key","Component","Menu","_this","menuRequested","getMenuItems","then","res","menuLoaded","menu","categories","loading","changeTab","activeTab","spinner_spinner","menu_list_menu_list","newMenu","tab","state","visibleMenu","MainPage","menu_menu","CartTable","total","Fragment","CartPage","components_cart_table","react_router_dom","to","cartIcon","App","app_header_app_header","react_router","exact","path","component","Error","ErrorBoundry","error","setState","children","_apiBase","fetch","concat","response","ok","json","getResource","initialState","allMenu","reducer","arguments","length","undefined","action","objectSpread","forEach","indexOf","category","push","touch","touchMenu","existingItem","toConsumableArray","newItem","idx","itemIndex","findIndex","delItem","slice","idy","added","store","createStore","restoService","ReactDOM","render","es","error_boundry_ErrorBoundry","Provider","value","basename","process","app","document","getElementById"],"mappings":"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","file":"static/js/main.d2973bca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shopping-cart-solid.701d6d1d.svg\";","import React from 'react';\r\n\r\nconst RestoServiceContext = React.createContext();\r\n\r\nexport default RestoServiceContext;","import React from 'react';\nimport RestoServiceContext from '../resto-service-context/resto-service-context';\n\nconst WithRestoService = () => (Wrapped) => {\n    return (props) => {\n        return (\n            <RestoServiceContext.Consumer>\n                {\n                    (RestoService) => {\n                        return <Wrapped {...props} RestoService={RestoService}/>\n                    }\n                }\n            </RestoServiceContext.Consumer>\n        )\n    };\n};\n\nexport default WithRestoService;","const menuRequested = () => {\r\n    return {\r\n        type: 'MENU_REQUESTED',\r\n    };\r\n};\r\n\r\nconst menuLoaded = (newMenu, tab) => {\r\n    return {\r\n        type: 'MENU_LOADED',\r\n        payload: newMenu,\r\n        tab: tab,\r\n    };\r\n};\r\n\r\nconst categoriesLoaded = () => {\r\n    return {\r\n        type: 'CATEGORIES_LOADED',\r\n    };\r\n};\r\n\r\nconst changeTab = (tab) => {\r\n    return {\r\n        type: 'CHANGE_TAB',\r\n        tab: tab,\r\n    };\r\n}\r\n\r\nconst addedToCard = (id, price) => {\r\n    return {\r\n        type: 'ITEM_ADD_TO_CARD',\r\n        payload: id,\r\n        price: price\r\n    };\r\n};\r\n\r\nconst deleteFromCard = (id) => {\r\n    return {\r\n        type: 'ITEM_REMOVE_FROM_CARD',\r\n        payload: id\r\n    };\r\n};\r\n\r\nconst isItemInCart = (id) => {\r\n    return {\r\n        type: 'CHECK_ITEM_IN_CART',\r\n        payload: id\r\n    };\r\n};\r\n\r\nexport {\r\n    menuLoaded,\r\n    menuRequested,\r\n    addedToCard,\r\n    deleteFromCard,\r\n    isItemInCart,\r\n    categoriesLoaded,\r\n    changeTab\r\n};","import React from 'react';\nimport './spinner.scss';\n\nconst Spinner = () => {\n\n    return (\n        <section className='spinner'>\n            <div className=\"spinner__eclipse\"> \n                <div className=\"ldio-2pu35wpqvcc\">\n                    <div></div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Spinner;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {deleteFromCard, addedToCard, isItemInCart} from '../../actions/index';\r\nimport './added-button.scss';\r\n\r\nconst AddedButton = ({isItemInCart, addedToCard, deleteFromCard, item}) => {\r\n \r\n    const {count, price, id} = item;\r\n\r\n    return (\r\n        <div className=\"added-btn\">\r\n            <button \r\n                className=\"added-btn__minus\"\r\n                onClick={() => {\r\n                    deleteFromCard(id)\r\n                    }\r\n                } \r\n            >-</button>\r\n            <div className=\"added-btn__title\">\r\n                <span >Added:</span>\r\n                <span >{count}</span>\r\n            </div> \r\n            <button \r\n                className=\"added-btn__plus\"\r\n                onClick={() => {\r\n                    isItemInCart(id);\r\n                    addedToCard(id, price)\r\n                    }\r\n                } \r\n            >+</button>\r\n        </div>  \r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = ({itemsInCart}) => {\r\n    return {\r\n        itemsInCart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    deleteFromCard,\r\n    addedToCard,\r\n    isItemInCart\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddedButton);\r\n","import React from 'react';\nimport './menu-list-item.scss';\nimport AddedButton from '../added-button/added-button';\n\nconst MenuListItem = ({isItemInCart, menuItem, onAddToCard, itemInCart}) => {\n    const {title, price, url} = menuItem;\n    \n    return (\n            <li \n                className=\"menu__item\">\n                    <img className=\"menu__img\" src={url} alt={title}></img>\n                    <div className=\"menu__title\">{title}</div>\n                    <div className=\"menu__price-info\">\n                        <div className=\"menu__price\">Price: <span>{price}$</span></div>\n                        { itemInCart ? \n                            <AddedButton item={itemInCart}/> :     \n                            <button \n                                    onClick={() => {\n                                        onAddToCard();\n                                        isItemInCart()\n                                        }\n                                    } \n                                    className=\"menu__btn\"\n                            >Add to cart</button>\n                        }\n                    </div>\n            </li>\n    );\n}\n\nexport default MenuListItem;","import React from 'react';\nimport MenuListItem from '../menu-list-item/menu-list-item';\nimport './menu-list.scss';\n\nclass MenuList extends React.Component {\n    \n    render() {\n        const {menuItems, addedToCard, isItemInCart, itemsInCart} = this.props;\n\n        return (\n            <ul className=\"menu__list\">\n                {\n                    menuItems.map(menuItem => {\n                        const findItem = itemsInCart.find(item => item.id === menuItem.id) || null;\n                        return <MenuListItem \n                            key={menuItem.id} \n                            menuItem={menuItem}\n                            onAddToCard={() => addedToCard(menuItem.id, menuItem.price)}\n                            isItemInCart={() => isItemInCart(menuItem.id)}\n                            itemInCart={findItem || null}\n                            />\n                    })\n                }\n            </ul>\n        )\n    }\n};\n\nexport default MenuList;","import React from 'react';\r\nimport WithRestoService from '../hoc/with-resto-service';\r\nimport {connect} from 'react-redux';\r\nimport {menuLoaded, menuRequested, addedToCard, isItemInCart, changeTab} from '../../actions/index';\r\nimport Spinner from '../spinner/spinner';\r\nimport MenuList from '../menu-list/menu-list';\r\nimport './menu.scss';\r\n\r\nclass Menu extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.menuRequested();\r\n        const {RestoService} = this.props;\r\n        RestoService.getMenuItems()\r\n         .then(res => this.props.menuLoaded(res.menu, null));\r\n    }\r\n\r\n    render() {\r\n        const {categories, menuItems, loading, addedToCard, isItemInCart, itemsInCart, changeTab, activeTab} = this.props;\r\n        \r\n        if (loading) {\r\n            return <Spinner/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"menu\">\r\n                <ul className=\"menu__tabs\">\r\n                    {\r\n                        categories.map(item => {\r\n                            return (\r\n                                <li \r\n                                    className={activeTab === item ? \"menu__tabs-item active\" : \"menu__tabs-item\"}\r\n                                    key={item[1]} //можно и получше придумать\r\n                                    onClick={() => changeTab(item)}\r\n                                    >{item}\r\n                                </li>\r\n                                \r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n                <MenuList \r\n                    menuItems={menuItems}\r\n                    addedToCard={addedToCard} \r\n                    isItemInCart={isItemInCart}\r\n                    itemsInCart={itemsInCart}/>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        menuItems: state.visibleMenu,\r\n        loading: state.loading,\r\n        itemsInCart: state.itemsInCart,\r\n        categories: state.categories,\r\n        activeTab: state.activeTab\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    menuLoaded,\r\n    menuRequested,\r\n    addedToCard,\r\n    isItemInCart,\r\n    changeTab\r\n}\r\n\r\nexport default  WithRestoService()(connect(mapStateToProps, mapDispatchToProps)(Menu));","import React from 'react';\nimport Menu from '../menu/menu';\n\nconst MainPage = () => {\n    return (\n        <Menu/>\n    )\n}\n\nexport default MainPage;\n","import React from 'react';\nimport './cart-table.scss';\nimport {connect} from 'react-redux';\nimport {deleteFromCard} from '../../actions/index';\nimport AddedButton from '../added-button/added-button'\n\nconst CartTable = ({itemsInCart, total, deleteFromCard}) => {\n    return (\n        <>\n            <div className=\"cart__title\">{ total > 0 ? 'Ваш заказ:' : 'Корзина пуста'}</div>\n            <div className=\"cart__list\">\n                {\n                    itemsInCart.map(item => {\n                        const {title, price, url, id, count} = item;\n\n                        return (\n                            <div key={id} className=\"cart__item\">\n                                <img src={url} className=\"cart__item-img\" alt={title}></img>\n                                <div className=\"cart__item-description\">\n                                    <div className=\"cart__item-title\">{title}</div>\n                                    <AddedButton item={item}/>\n                                    <div className=\"cart__item-price\">X{price}$</div>\n                                    <div className=\"cart__item-price\">={count*price}$</div>\n                                    {/* <div onClick={() => deleteFromCard(id, price, count)} className=\"cart__close\">&times;</div> */}\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        itemsInCart: state.itemsInCart,\n        total: state.total\n    }\n}\n\nconst mapDispatchToProps = {\n    deleteFromCard\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartTable);","import CartTable from './cart-table';\n\nexport default CartTable;","import React from 'react';\nimport CartTable from '../cart-table';\n\nconst CartPage = () => {\n    return (\n        <div className=\"cart\"> \n            <CartTable/>\n        </div>\n    )\n}\n\nexport default CartPage;","import React from 'react';\nimport cartIcon from './shopping-cart-solid.svg';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport './app-header.scss';\n\nconst AppHeader = ({total}) => {\n    return (\n        <header className=\"header\">\n            <Link to='/' className=\"header__link\" >\n                Menu\n            </Link>\n            <Link to='/cart' className=\"header__link\" >\n                <img className=\"header__cart\" src={cartIcon} alt=\"cart\"></img>\n                Total: {total} $\n            </Link>\n        </header>\n    )\n};\n\nconst mapStateToProps = ({total}) => {\n    return {\n        total\n    }\n}\n\nexport default connect(mapStateToProps)(AppHeader);","import React from 'react';\nimport {MainPage, CartPage} from '../pages';\nimport AppHeader from '../app-header/app-header';\nimport {Route} from 'react-router-dom';\n \nclass App extends React.Component  {\n    render () {\n        return (\n                <div className=\"app\">\n                <AppHeader/>\n                <Route exact path='/' component={MainPage}  />\n                <Route path=\"/cart\" component={CartPage} />\n                </div>\n        )\n    }     \n}\n\nexport default App;","import React from 'react';\n\nconst Error = () => {\n    return <div className=\"error\">Error</div>\n}\n\nexport default Error;","import React from 'react';\nimport Error from '../error/error';\n\nexport default class ErrorBoundry extends React.Component {\n\n    state = {\n        error: false\n    }\n    componentDidCatch() {\n        this.setState({error: true})\n    }\n    render() {\n       if (this.state.error) {\n        return <Error/>;\n       }\n       \n       return this.props.children;\n    }\n}\n","export default class RestoService {\r\n    _apiBase = 'https://maxnitude.github.io';\r\n    \r\n    async getResource (url) {\r\n        const response = await fetch(`${this._apiBase}${url}`);\r\n        if (response.ok) {\r\n            return response.json();\r\n        } else {\r\n            throw new Error(`Не удалось получить данные`)\r\n        }\r\n    }\r\n\r\n    async getMenuItems () {\r\n        return await this.getResource(`/menu/db.json`);\r\n    }\r\n}\r\n","const initialState = {\r\n    allMenu: [],\r\n    visibleMenu: [],\r\n    loading: true,\r\n    itemsInCart: [],\r\n    total: 0,\r\n    categories: [],\r\n    activeTab: 'Pizza'\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'MENU_REQUESTED':\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        \r\n        case 'MENU_LOADED':\r\n            const allMenu = action.payload;\r\n            let tab = action.tab;\r\n            if (tab === null) {\r\n                tab = state.activeTab;\r\n            }\r\n            const visibleMenu = [];\r\n            allMenu.forEach(item => {  \r\n                if (state.categories.indexOf(item.category) === -1) {\r\n                    state.categories.push(item.category);\r\n                };\r\n            })\r\n\r\n            allMenu.forEach(item => {\r\n                if (item.category === tab) {\r\n                    visibleMenu.push(item);\r\n                }\r\n            })\r\n\r\n            return {\r\n                ...state,\r\n                allMenu: action.payload,\r\n                visibleMenu: visibleMenu,\r\n                loading: false,\r\n                categories: state.categories,\r\n                activeTab: tab,\r\n            };\r\n\r\n        case 'CHANGE_TAB':\r\n            const touch = action.tab;\r\n            const touchMenu = [];\r\n            state.allMenu.forEach(item => {\r\n                if (item.category === touch) {\r\n                    touchMenu.push(item);\r\n                }\r\n            })\r\n            return {\r\n                ...state,\r\n                visibleMenu: [...touchMenu],\r\n                activeTab: touch,\r\n            };\r\n\r\n        case 'ITEM_ADD_TO_CARD':\r\n            const id = action.payload;\r\n            const price = action.price;\r\n            const item = state.visibleMenu.find(item => item.id === id);\r\n            const existingItem = state.itemsInCart.find(item => item.id === id);\r\n            if (existingItem) {\r\n                existingItem.count++;\r\n                // console.log(existingItem.count);\r\n                return {\r\n                    ...state,\r\n                    itemsInCart: [\r\n                        ...state.itemsInCart\r\n                    ],\r\n                    total: state.total + price\r\n                };\r\n            }\r\n            const newItem = {\r\n                title: item.title,\r\n                price: item.price,\r\n                url: item.url,\r\n                id: item.id,\r\n                count: 1,\r\n            }   \r\n            return {\r\n                ...state,\r\n                itemsInCart: [\r\n                    ...state.itemsInCart,\r\n                   newItem\r\n                ],\r\n                total: state.total+price\r\n            };\r\n\r\n        case 'ITEM_REMOVE_FROM_CARD':\r\n            const idx = action.payload;\r\n            const itemIndex = state.itemsInCart.findIndex(item => item.id === idx);\r\n            const delItem = state.itemsInCart.find(item => item.id === idx); \r\n            if (delItem.count > 1) {\r\n                delItem.count--;\r\n                return {\r\n                    ...state,\r\n                    itemsInCart: [\r\n                        ...state.itemsInCart\r\n                    ],\r\n                    total: state.total - delItem.price\r\n                };\r\n            }   \r\n            return {\r\n                ...state,\r\n                itemsInCart: [\r\n                    ...state.itemsInCart.slice(0, itemIndex),\r\n                    ...state.itemsInCart.slice(itemIndex + 1)\r\n                ],\r\n                total: state.total - delItem.price\r\n            }\r\n\r\n        case 'CHECK_ITEM_IN_CART':\r\n            const idy = action.payload;\r\n            const itemInCart = state.itemsInCart.find(item => item.id === idy);\r\n            itemInCart.added = true;\r\n            return {\r\n                ...state,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import {createStore} from 'redux';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport ErrorBoundry from './components/error-boundry/error-boundry';\nimport RestoService from './services/resto-service';\nimport RestoServiceContext from './components/resto-service-context/resto-service-context';\nimport store from './store';\n\nimport './index.scss';\n\nconst restoService = new RestoService();\n\nReactDOM.render(\n    <Provider store={store}>\n        <ErrorBoundry>\n            <RestoServiceContext.Provider value={restoService}>\n                <Router basename={process.env.PUBLIC_URL}>\n                    <App/>\n                </Router>\n            </RestoServiceContext.Provider>\n        </ErrorBoundry>\n    </Provider>\n    ,document.getElementById('root')\n);\n\n"],"sourceRoot":""}